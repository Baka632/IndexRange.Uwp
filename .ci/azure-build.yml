steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core 2.1 Runtime'
  inputs:
    version: '2.1.x'
    packageType: 'runtime'

- task: UseDotNet@2
  displayName: 'Install .NET Core 3.0 Runtime'
  inputs:
    version: '3.0.x'
    packageType: 'runtime'

- task: UseDotNet@2
  displayName: 'Install .NET 6.0 SDK'
  inputs:
    version: '6.0.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'Test netcoreapp2.1'
  inputs:
    command: 'test'
    arguments: '-c Release -f netcoreapp2.1'
    testRunTitle: 'netcoreapp2.1'

- task: DotNetCoreCLI@2
  displayName: 'Test netcoreapp3.0 (Baseline)'
  inputs:
    command: 'test'
    arguments: '-c Release -f netcoreapp3.0'
    testRunTitle: 'netcoreapp3.0'

- task: DotNetCoreCLI@2
  displayName: 'Test net47'
  condition: eq(variables['Agent.OS'], 'Windows_NT')
  inputs:
    command: 'test'
    arguments: '-c Release -f net47'
    testRunTitle: 'net47'

- task: DotNetCoreCLI@2
  displayName: 'Test net48'
  condition: eq(variables['Agent.OS'], 'Windows_NT')
  inputs:
    command: 'test'
    arguments: '-c Release -f net48'
    testRunTitle: 'net48'

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: 'pack'
    arguments: '-c Release --no-build'

- task: PublishPipelineArtifact@1
  displayName: 'Publish NuGet packages'
  condition: eq(variables['Agent.OS'], 'Windows_NT')
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifactName: NuGet
